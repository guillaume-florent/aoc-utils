#!/usr/bin/env python
# coding: utf-8

r"""Command line launch of the viewer"""

import logging
from os import getcwd
from os.path import join, isfile, abspath
from argparse import ArgumentParser

import wx

from aocxchange.extensions import step_extensions, iges_extensions, \
    stl_extensions, brep_extensions
from aocxchange.utils import extract_file_extension
from aocxchange.step import StepImporter
from aocxchange.iges import IgesImporter
from aocxchange.stl import StlImporter
from aocxchange.brep import BrepImporter

from aocutils.display.wx_viewer import Wx3dViewerFrame

# Python 2 and 3 compatibility
try:
    FileNotFoundError
except NameError:
    FileNotFoundError = IOError

logger = logging.getLogger(__name__)

logging.basicConfig(level=logging.INFO,
                    format='%(asctime)s :: %(levelname)6s :: %(module)20s :: '
                           '%(lineno)3d :: %(message)s')


parser = ArgumentParser(description="Visualize a CAD file")

parser.add_argument('cadfile', type=str, nargs=1)
args = parser.parse_args()

if isfile(abspath(join(getcwd(), args.cadfile[0]))):
    cadfile = join(getcwd(), args.cadfile[0])
else:
    cadfile = args.cadfile[0]

extension = extract_file_extension(cadfile)

if extension.lower() in step_extensions:
    type_ = "step"
    shapes = StepImporter(cadfile).shapes
elif extension.lower() in iges_extensions:
    type_ = "iges"
    shapes = IgesImporter(cadfile).shapes
elif extension.lower() in stl_extensions:
    type_ = "stl"
    shapes = list()
    shapes.append(StlImporter(cadfile).shape)
elif extension.lower() in brep_extensions:
    type_ = "brep"
    shapes = list()
    shapes.append(BrepImporter(cadfile).shape)
else:
    raise ValueError("File extension indicates a file type that "
                     "is not supported")

app = wx.App()
frame = Wx3dViewerFrame()
for shape in shapes:
    frame.wx_3d_viewer.display_shape(shape)
app.SetTopWindow(frame)
app.MainLoop()
